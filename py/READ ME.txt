<scan> 스캐너 연동 코드
파일 이름은 scan[조립라인번호]_[COM포트번호].py
1. 스캐너로 바코드를 찍으면 부품 코드 기준으로 LH, RH 나누어 assy_lh, assy_rh 삽입
2. 이때, plc 테이블에 스캔 검증 신호를 줌
ex) 조립 1차 라인에서 RH 코드가 스캔되었다면, assy1read 테이블의 id = 6번에서 DATA1 = 1, contents1 = 12로 업데이트
3. 스캔 로트 코드 - 파트 코드 메모리맵을 참고하여 로트 코드를 업데이트 해줌
ex) 조립 2차 라인에서 LH 코드가 스캔되었다면, assy2read 테이블의 id = 2번에서 DATA2 = 로트 코드, contents1 = 12로 업데이트

의존성 관련
mysql-connector-python: 8.4.0
1. pyinstaller --onefile --hidden-import=mysql.connector scan_roll_n.py
2. scan_roll_n.spec에서 hidden-import 부분 mysql.connector.plugins.mysql_native_password로 변경
3. pyinstaller scan_roll_n.spec

<main> DB 업데이트 코드
파일 이름은 main_[lh/rh].py
전역 변수 running: 업데이트를 계속할 것인지, 새로운 스캔값을 기다릴 것인지 결정
** 업데이트 **
1. plc 테이블에서 해당하는 값 읽어옴
ex) 조립 1차 라인에서 LH 관련 데이터를 읽어온다면, assy1read 테이블의 id = 1번에서 DATA3 - DATA8의 정보를 가져와 assy_lh 테이블의 DATA1 - DATA6에 업데이트
2. 전체 공정 완료 데이터가 넘어오면 웨이팅 모드로 변경 (running = False)
ex) 조립 2차 라인에서 RH 관련 데이터를 읽던 중, assy2read 테이블의 DATA6에 1 혹은 2의 값이 탐지되면 running = False를 대입함
3. 이때 plc 테이블에 PC 완료 신호를 줌
ex) 조립 3차 라인에서 LH 데이터 수신이 완료되면 assy3read 테이블의 id = 8번에서 DATA0 = 1, contents1 = 11로 업데이트
>> 조립 1차 볼트 토크값의 업데이트에 대하여

assy1read id = 1 DATA5 즉 볼트1이 업데이트 되었을 때는 9502번에서 LH 볼트1 토크값 받아오기
assy1read id = 1 DATA6 즉 볼트2가 업데이트 되었을 때는 9502번에서 LH 볼트2 토크값 받아오기
assy1read id = 5 DATA5 즉 볼트1이 업데이트 되었을 때는 9500번에서 RH 볼트1 토크값 받아오기
assy1read id = 5 DATA6 즉 볼트2가 업데이트 되었을 때는 9500번에서 RH 볼트2 토크값 받아오기
조립 1차 공정에서 assy_lh, assy_rh에 DATA7, DATA8을 각각 볼트1, 볼트2 토크값 저장소로 활용
** 웨이팅 **
1. assy_lh, assy_rh를 각각 1초 간격으로 가장 최근 데이터 한 행 씩 관찰함
2. 데이터 컬럼이 전부 NULL(None Type)인 행이 관찰되면 업데이트 모드로 변경 (running = False)